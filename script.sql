-- DROP TABLE public."Products";

CREATE TABLE IF NOT EXISTS public."Products"
(
    "Id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    "Name" text COLLATE pg_catalog."default",
    "Price" numeric NOT NULL,
    "Description" text COLLATE pg_catalog."default",
    "Stock" integer NOT NULL,
    CONSTRAINT "PK_Products" PRIMARY KEY ("Id")
)

TABLESPACE pg_default;

ALTER TABLE public."Products"
    OWNER to postgres;


INSERT INTO public."Products"("Name", "Price", "Description", "Stock") VALUES 
('Essential TypeScript 4: From Beginner to Pro',45.0,'Learn the essentials and more of TypeScript, a popular superset of the JavaScript language that adds support for static typing. TypeScript combines the typing features of C# or Java.',0),
('Hackeando el cerebro de tus compradores: PsychoGrowth',5.0,'En Hackeando del cerebro de tus compradores, Corti nos revela cómo muchas compañías crean productos digitales o procesos de venta capaces de conectar con la psicología del comprador.',10),
('Angular Routing: Learn To Create client-side and SPA with Routing and Navigation',17.0,'In this book, the reader will be able to focus on one concept of Angular in deep.',10),
('SanDisk 128GB Ultra MicroSDXC UHS-I Memory Card with Adapter',19.0,'Ideal for Android smartphones and tablets, and MIL cameras. SanDisk Memory Zone app for easy file management (Download and Installation Required).',10),
('GoPro HERO9 Black - Waterproof Action Camera with Front LCD',399.0,'5K Video - Shoot stunning video with up to 5K resolution, perfect for maintaining detail even when zooming in',10),
('CL3 Rated High-Speed 4K HDMI Cable - 6 Feet',7.0,'HDMI A Male to A Male Cable: Supports Ethernet, 3D, 4K video and Audio Return Channel (ARC)',10),
('Logitech MK270 Wireless Keyboard and Mouse Combo',32.0,'The USB receiver is conveniently located in the box, top flap. This wireless keyboard and mouse feature Logitech Advanced 2.4GHz technology with a range of up to 10 metres.',10),
('External CD Drive USB 3.0 Portable CD DVD +/-RW Drive DVD/CD ROM',20.0,'Plug & play. Easy to use,powered by USB port. No external driver and Power needed. Just plug it into your USB port and the DVD driver will be detected',10);

-- DROP TABLE public."Stores";

CREATE TABLE IF NOT EXISTS public."Stores"
(
    "Id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    "Name" text COLLATE pg_catalog."default",
    "Address" text COLLATE pg_catalog."default",
    "City" text COLLATE pg_catalog."default",
    "OpeningHours" text COLLATE pg_catalog."default",
    CONSTRAINT "PK_Stores" PRIMARY KEY ("Id")
)

TABLESPACE pg_default;

ALTER TABLE public."Stores"
    OWNER to postgres;


INSERT INTO public."Stores"("Name", "Address", "City", "OpeningHours")	VALUES 
('Park Row at Beekman St','38 Park Row','New York','10:00 - 14:00 and 17:00 - 20:30'),
('Store Alcalá','Calle de Alcalá, 21','Madrid','10:00 - 14:00 and 17:00 - 20:30'),
('Chambers and West Broadway','125 Chambers Street','New York','10:00 - 14:00 and 17:00 - 20:30'),
('Covent Garden - Russell St','10 Russell Street','London','10:00 - 14:00 and 17:00 - 20:30'),
('Monmouth St','11 Monmouth Street','London','10:00 - 14:00 and 17:00 - 20:30');


-- DROP TABLE public."Orders";

CREATE TABLE IF NOT EXISTS public."Orders"
(
    "Id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    "Name" text COLLATE pg_catalog."default",
    "Date" text COLLATE pg_catalog."default",
    "Pickup" boolean NOT NULL,
    "StoreId" bigint,
    "ShippingAddress" text COLLATE pg_catalog."default",
    "City" text COLLATE pg_catalog."default",
    "Total" numeric NOT NULL,
    CONSTRAINT "PK_Orders" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Orders_Stores_StoreId" FOREIGN KEY ("StoreId")
        REFERENCES public."Stores" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE RESTRICT
)

TABLESPACE pg_default;

ALTER TABLE public."Orders"
    OWNER to postgres;
-- Index: IX_Orders_StoreId

-- DROP INDEX public."IX_Orders_StoreId";

CREATE INDEX "IX_Orders_StoreId"
    ON public."Orders" USING btree
    ("StoreId" ASC NULLS LAST)
    TABLESPACE pg_default;

INSERT INTO public."Orders"( "Name", "Date", "Pickup", "StoreId", "ShippingAddress", "City", "Total") VALUES 
('Dominicode','01/12/1995',false,null,'Av. de la Granvia de Hospitalet, 115','Barcelona',20.4),
('Dominicode','01/12/1995',true,1,null,null,105.3);


-- DROP TABLE public."DetailsOrder";

CREATE TABLE IF NOT EXISTS public."DetailsOrder"
(
    "Id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    "OrderId" bigint NOT NULL,
    "ProductId" bigint NOT NULL,
    "Quantity" integer NOT NULL,
    "Subtotal" numeric NOT NULL,
    CONSTRAINT "PK_DetailsOrder" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_DetailsOrder_Orders_OrderId" FOREIGN KEY ("OrderId")
        REFERENCES public."Orders" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE,
    CONSTRAINT "FK_DetailsOrder_Products_ProductId" FOREIGN KEY ("ProductId")
        REFERENCES public."Products" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
)

TABLESPACE pg_default;

ALTER TABLE public."DetailsOrder"
    OWNER to postgres;
-- Index: IX_DetailsOrder_OrderId

-- DROP INDEX public."IX_DetailsOrder_OrderId";

CREATE INDEX "IX_DetailsOrder_OrderId"
    ON public."DetailsOrder" USING btree
    ("OrderId" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: IX_DetailsOrder_ProductId

-- DROP INDEX public."IX_DetailsOrder_ProductId";

CREATE INDEX "IX_DetailsOrder_ProductId"
    ON public."DetailsOrder" USING btree
    ("ProductId" ASC NULLS LAST)
    TABLESPACE pg_default;

INSERT INTO public."DetailsOrder"("OrderId", "ProductId", "Quantity", "Subtotal") VALUES ( 1, 1, 10, 100.00);
